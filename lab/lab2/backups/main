#!/bin/bash

#--------------------------------------------------------------------------------------
#‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó‚ÄÉ‚ÄÉ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó
#‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñà‚ñà‚ïî‚ïù‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë
#‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ï¶‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïê‚ïù‚ñë‚ÄÉ‚ÄÉ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë
#‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó‚ñë‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë
#‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ï¶‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ïó‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë
#‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ÄÉ‚ÄÉ‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù
#--------------------------------------------------------------------------------------

# Programa principal de copias de seguridad de archivos de configuraci√≥n, archivos o directorio.
# Gestionados en la carpeta central /bck.
# Sustituyendo los archivos principales por enlaces simb√≥licos

# Sistema BCK consta de 2 partes:
# - Una estructura de archivos donde se organizan las copias de los archivos
# - Un conjunto de programas de utilidad que gestionan la estructura de archivos

# Cuando se a√±ade un ficherom refiri√©ndose a ficheros o directorios en general, a este se le asocia un identificador. (ID) 
# Este id indica al fichero de forma un√≠voca en el sistema y permite su  gesti√≥n. El sistema bck permite:
#
# 1) A√±adir fichero a la copia (bcklink)
# 2) Ver los ids y ficheros asociados (bckview)
# 3) Modificar su id (bckmv)
# 4) Restaurar el fichero (bckrestore)
# 5) Eliminar el fichero de la copia (bckrm)

## Estructura de archivos
# . ~
# |
# |-+ bckdir/
#   |-- files/ ( contiene los archivos que se han incluido en bck, pero se sustituye el nombre del fichero por el del id asignado.)
#   |-- mypaths.txt ( contiene en cada l√≠nea una pareja id,ruta (separada por una coma) 

# La forma en que funciona bck es sustituyendo el archivo original por un enlace
# simb√≥lico que apunta a la copia realizada (el archivo dentro de la carpeta files
# nombrado por su id).
#
# Ejemplo:
#----------------------------------------------------------------
#                               Fichero original
#----------------------------------------------------------------
# ~/dir/test/$ ls -l
# -rw-rw-r-- 1 user 10 feb 10 18:52 file1.txt
# 
#
#----------------------------------------------------------------
#                         Fichero tras realizar copia
#----------------------------------------------------------------
# lrwxrwxrwx 1 user 52 feb 10 20:10 file1.txt -> /home/user/bckdir/files/f1
#
#----------------------------------------------------------------
#                               En mypaths.txt 
#----------------------------------------------------------------
# f1,/home//dir/test/file1.txt
#
#----------------------------------------------------------------
#                                   En 'files'
#----------------------------------------------------------------
# ~/bckdir/files/$ ls -l
# -rw-rw-r-- 1 user 13 mar 10 18:52 f1

# Funci√≥n para imprimir un mensaje de advertencia centrado y con color llamativo
print_warning() {
    local message="$1"
    local terminal_width="$(tput cols)"
    local message_length="${#message}"
    local padding_length=$(( ($terminal_width - $message_length) / 2 ))
    local padding=""
    for ((i = 0; i < $padding_length; i++)); do
        padding+=" "
    done
    
    echo -e "\n\n\033[1;31m$padding$message$padding\033[0m"
}

# Mensaje de advertencia
warning_message="Recordatorio: Por favor, use rutas absolutas en el programa para mejorar su experiencia con las tareas de backups."


# Funci√≥n para imprimir el men√∫
print_menu() {
    echo -e "¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑"
    echo -e "\n>>>>>>>>>>>>> √üùì¨∆ô œÅ…æœÉ÷Å…æŒ±ùì∂ <<<<<<<<<<<<\n"
    echo -e "¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑"
    echo -e "\n\033[1;36m-- Menu de Copia de Seguridad --\n\033[0m"
    echo -e "\033[1;32m  1) A√±adir fichero a la copia (bcklink) \033[0m"
    echo -e "\033[1;32m  2) Ver los ids y ficheros asociados (bckview) \033[0m"
    echo -e "\033[1;32m  3) Modificar su id (bckmv) \033[0m"
    echo -e "\033[1;32m  4) Restaurar el fichero (bckrestore) \033[0m"
    echo -e "\033[1;32m  5) Eliminar el fichero de la copia (bckrm) \033[0m"
    echo -e "\033[1;35m  0) Salir \033[0m"
}

# Funci√≥n para registrar los resultados en el archivo de log con fecha
log_result() {
    logs_dir="logs"
    # Verificar si el directorio logs/ existe, si no, crearlo
    if [ ! -d $logs_dir ]; then
        mkdir $logs_dir
    fi
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> logs/"$(date +"%Y-%m-%d").log" 2>&1
}

# Funci√≥n para salir del programa
exit_program() {
    echo ""
    echo -e "\033[1; 36m-- Gracias por usar el sistema BCK --\033[0m"
    echo "Finalizando el sistema BCK"
    sleep 2
    clear
}

# Funci√≥n inv√°lida en el sistema BCK
bad_option() {
    echo ""
    echo -e "\033[1;31m -- \t Illegal options --\033[0m"
    echo -e "\033[1;31m Vuelva a intentarlo de nuevo \033[0m"
    echo ""
}

bcklink() {
    ./functions/bcklink 
}
bckview() {
    ./functions/bckview 
}
bckmv() {
    ./functions/bckmv 
}
bckrestore() {
    ./functions/bckrestore 
}
bckrm() {
    ./functions/bckrm 
}

# Funci√≥n para ejecutar la opcion seleccionada
execute_option() {
    archivo_log="logs/$(date +"%Y-%m-%d").log" 
    local option=$1
    case $option in
        1) echo ""; bcklink 2>&1 | tee -a $archivo_log;;
        2) echo ""; bckview 2>&1 | tee -a $archivo_log;;
        3) echo ""; bckmv 2>&1 | tee -a $archivo_log;;
        4) echo ""; bckrestore 2>&1 | tee -a $archivo_log;;
        5) echo ""; bckrm 2>&1 | tee -a $archivo_log;;        
        0) exit_program 2>&1 | tee -a $archivo_log; exit;;        
        *) bad_option 2>&1 | tee -a $archivo_log;;
    esac
}

# Funci√≥n principal del script
main() {
    # Archivo de logs
    archivo_log="logs/$(date +"%Y-%m-%d").log"    
    # Imprimir el mensaje de advertencia    
    clear
    print_warning "$warning_message"
    sleep 2
    clear
    # Bucle infinito del menu principal
    while true; do
        clear
        print_menu
        read -p "Ingrese una opcion: " option
        log_result "Opci√≥n seleccionada: $option"        
        execute_option $option        
        read -p "Presione ENTER para continuar ..." backmenu
    done
}

# Ejecutar la funci√≥n principal
main 